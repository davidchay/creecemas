angular.module("ui.bootstrap.buttons",[]).constant("uibButtonConfig",{activeClass:"active",toggleEvent:"click"}).controller("UibButtonsController",["uibButtonConfig",function(n){this.activeClass=n.activeClass||"active",this.toggleEvent=n.toggleEvent||"click"}]).directive("uibBtnRadio",["$parse",function(a){return{require:["uibBtnRadio","ngModel"],controller:"UibButtonsController",controllerAs:"buttons",link:function(e,t,i,n){var l=n[0],o=n[1],n=a(i.uibUncheckable);t.find("input").css({display:"none"}),o.$render=function(){t.toggleClass(l.activeClass,angular.equals(o.$modelValue,e.$eval(i.uibBtnRadio)))},t.on(l.toggleEvent,function(){var n;i.disabled||((n=t.hasClass(l.activeClass))&&!angular.isDefined(i.uncheckable)||e.$apply(function(){o.$setViewValue(n?null:e.$eval(i.uibBtnRadio)),o.$render()}))}),i.uibUncheckable&&e.$watch(n,function(n){i.$set("uncheckable",n?"":void 0)})}}}]).directive("uibBtnCheckbox",function(){return{require:["uibBtnCheckbox","ngModel"],controller:"UibButtonsController",controllerAs:"button",link:function(t,n,e,i){var l=i[0],o=i[1];function a(){return u(e.btnCheckboxTrue,!0)}function u(n,e){return angular.isDefined(n)?t.$eval(n):e}n.find("input").css({display:"none"}),o.$render=function(){n.toggleClass(l.activeClass,angular.equals(o.$modelValue,a()))},n.on(l.toggleEvent,function(){e.disabled||t.$apply(function(){o.$setViewValue(n.hasClass(l.activeClass)?u(e.btnCheckboxFalse,!1):a()),o.$render()})})}}});